done

= Action Pack -- From request to response

Action Pack is a framework for handling and responding to web requests. It
provides mechanisms for *routing* (mapping request URLs to actions), defining
*controllers* that implement actions, and generating responses by rendering
*views*, which are templates of various formats. In short, Action Pack
provides the view and controller layers in the MVC paradigm.

It consists of several modules:

* Action Dispatch, which parses information about the web request, handles
  routing as defined by the user, and does advanced processing related to HTTP
  such as MIME-type negotiation, decoding parameters in POST, PATCH, or PUT bodies,
  handling HTTP caching logic, cookies and sessions.

* Action Controller, which provides a base controller class that can be
  subclassed to implement filters and actions to handle requests. The result
  of an action is typically content generated from views.

With the Ruby on Rails framework, users only directly interface with the
Action Controller module. Necessary Action Dispatch functionality is activated
by default and Action View rendering is implicitly triggered by Action
Controller. However, these modules are designed to function on their own and
can be used outside of Rails.

You can read more about Action Pack in the {Action Controller Overview}[https://guides.rubyonrails.org/action_controller_overview.html] guide.

== Download and installation

The latest version of Action Pack can be installed with RubyGems:

  $ gem install actionpack

Source code can be downloaded as part of the Rails project on GitHub:

* https://github.com/rails/rails/tree/master/actionpack


== License

Action Pack is released under the MIT license:

* https://opensource.org/licenses/MIT


== Support

API documentation is at:

* https://api.rubyonrails.org

Bug reports for the Ruby on Rails project can be filed here:

* https://github.com/rails/rails/issues

Feature requests should be discussed on the rails-core mailing list here:

* https://discuss.rubyonrails.org/c/rubyonrails-core


=アクションパック-要求から応答まで

アクションパックは、Webリクエストを処理して応答するためのフレームワークです。それ
*ルーティング*（リクエストURLをアクションにマッピング）、定義するためのメカニズムを提供します
アクションを実装し、レンダリングによって応答を生成する*コントローラー*
*ビュー*。さまざまなフォーマットのテンプレートです。要するに、アクションパック
MVCパラダイムでビューとコントローラーのレイヤーを提供します。

それはいくつかのモジュールで構成されています：

* Webリクエストに関する情報を解析するAction Dispatchが処理します
  ユーザーが定義したルーティング、およびHTTPに関連する高度な処理を行う
  MIMEタイプのネゴシエーション、POST、PATCH、またはPUT本体のパラメーターのデコードなど
  HTTPキャッシングロジック、Cookie、およびセッションの処理。

*アクションコントローラー。
  リクエストを処理するためのフィルターとアクションを実装するためにサブクラス化されました。結果
  アクションの通常は、ビューから生成されたコンテンツです。

Ruby on Railsフレームワークでは、ユーザーは
アクションコントローラモジュール。必要なアクションディスパッチ機能がアクティブ化されています
デフォルトでは、アクションビューのレンダリングはアクションによって暗黙的にトリガーされます
コントローラ。ただし、これらのモジュールは独自に機能するように設計されており、
Rails外でも使用できます。

アクションパックの詳細については、{アクションコントローラの概要} [https://guides.rubyonrails.org/action_controller_overview.html]ガイドをご覧ください。

==ダウンロードとインストール

RubyGemsを使用すると、アクションパックの最新バージョンをインストールできます。

  $ gem install actionpack

ソースコードは、GitHubのRailsプロジェクトの一部としてダウンロードできます。

* https://github.com/rails/rails/tree/master/actionpack


==ライセンス

Action PackはMITライセンスでリリースされています。

* https://opensource.org/licenses/MIT


==サポート

APIドキュメントは次の場所にあります。

* https://api.rubyonrails.org

Ruby on Railsプロジェクトのバグレポートはこちらから提出できます。

* https://github.com/rails/rails/issues

機能のリクエストは、以下のrails-coreメーリングリストで議論する必要があります。

* https://discuss.rubyonrails.org/c/rubyonrails-core